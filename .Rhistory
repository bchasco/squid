source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
image((rep$pred_p_ef[,,i]),main=i+1997,
col=rainbow(length(seq(-5,6,0.1))-1),
breaks=seq(-5,6,0.1))
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_p_ef[,,i]),main=i+1997,
col=rainbow(length(seq(-5,6,0.1))-1),
breaks=seq(-5,6,0.1))
}
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
rep$eps_p_lat
plot(rep$eps_p_lat)
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]),main=i+1997,
col=rainbow(length(seq(-5,6,0.1))-1),
breaks=seq(-5,6,0.1))
}
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/rep$pred_c_ef[,,1]),main=i+1997,
col=rainbow(length(seq(-5,6,0.1))-1),
breaks=seq(-5,6,0.1))
}
image((rep$pred_c_ef[,,i]/rep$pred_c_ef[,,1]),main=i+1997
# ,col=rainbow(length(seq(-5,6,0.1))-1)
# ,breaks=seq(-5,6,0.1)
)
for(i in 1:22){
image((rep$pred_c_ef[,,i]/rep$pred_c_ef[,,1]),main=i+1997
# ,col=rainbow(length(seq(-5,6,0.1))-1)
# ,breaks=seq(-5,6,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/rep$pred_c_ef[,,1]))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
# ,col=rainbow(length(seq(-5,6,0.1))-1)
# ,breaks=seq(-5,6,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-5,6,0.1))-1)
,breaks=seq(-5,6,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-5,6,0.1))-1)
,breaks=seq(-5,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-5,10,0.1))-1)
,breaks=seq(-5,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-5,10,0.1))-1)
,breaks=seq(-5,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-5,100,0.1))-1)
,breaks=seq(-5,100,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-5,100,0.1))-1)
,breaks=seq(-10,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=rainbow(length(seq(-10,10,0.1))-1)
,breaks=seq(-10,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
for(i in 1:22){
image((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(seq(-10,10,0.1))-1)
,breaks=seq(-10,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image(exp(rep$pred_c_ef[,,i]-mean(rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(seq(-10,10,0.1))-1)
,breaks=seq(-10,10,0.1)
)
print(paste(i+1997,range((rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])))))
}
for(i in 1:22){
image(exp(rep$pred_c_ef[,,i]-mean(rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(seq(-10,10,0.1))-1)
,breaks=seq(-10,10,0.1)
)
print(paste(i+1997,range(exp(rep$pred_c_ef[,,i]-mean(rep$pred_c_ef[,,1])))))
}
# if(use_c_yll){
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image(exp(rep$pred_c_ef[,,i])/exp(mean(rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(seq(-10,10,0.1))-1)
,breaks=seq(-10,10,0.1)
)
print(paste(i+1997,range(exp(rep$pred_c_ef[,,i])/exp(mean(rep$pred_c_ef[,,1])))))
}
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
rep$pred_c_ef[,,i]
rep$pred_c_ef[,,1]
(rep$pred_c_ef[,,i] - (rep$pred_c_ef[,,1])
(rep$pred_c_ef[,,i] - (rep$pred_c_ef[,,1]))
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
# if(use_c_yll){
col_seq <- seq(-200,100,10)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image(((rep$pred_c_ef[,,i] - rep$pred_c_ef[,,1]) / (rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range((rep$pred_c_ef[,,i] / (rep$pred_c_ef[,,1])))))
}
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
image(lati_lu$lat, loi_lu$lo, ((rep$pred_c_ef[,,i] - rep$pred_c_ef[,,1]) / (rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
image(loi_lu$lo, lati_lu$lat, ((rep$pred_c_ef[,,i] - rep$pred_c_ef[,,1]) / (rep$pred_c_ef[,,1])),main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
image(loi_lu$lo, lati_lu$lat, rep$pred_c_ef[,,i],main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
# if(use_c_yll){
col_seq <- seq(-10,10,10)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image(loi_lu$lo, lati_lu$lat, rep$pred_c_ef[,,i],main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range((rep$pred_c_ef[,,i] / (rep$pred_c_ef[,,1])))))
}
for(i in 1:22){
image(loi_lu$lo, lati_lu$lat, rep$pred_c_ef[,,i],main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range(rep$pred_c_ef[,,i])))
}
# if(use_c_yll){
col_seq <- seq(-4,6,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image(loi_lu$lo, lati_lu$lat, rep$pred_c_ef[,,i],main=i+1997
,col=heat.colors(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range(rep$pred_c_ef[,,i])))
}
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/squid_v1_delta_glm_AR1yr_AR2Dspace.r', echo=TRUE)
# if(use_c_yll){
col_seq <- seq(-4,6,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
image(loi_lu$lo, lati_lu$lat, rep$pred_c_ef[,,i]/rowMeans(rep$pred_c_ef[,,1]),main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range(rep$pred_c_ef[,,i])))
}
# if(use_c_yll){
col_seq <- seq(-4,6,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
x <- rep$pred_c_ef[,,i]/rowMeans(rep$pred_c_ef[,,1])
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range(x)))
}
# if(use_c_yll){
col_seq <- seq(-10,10,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
x <- rep$pred_c_ef[,,i]/rowMeans(rep$pred_c_ef[,,1])
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range(x)))
}
# if(use_c_yll){
col_seq <- seq(-10,10,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
x <- rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
)
print(paste(i+1997,range(x)))
}
library(maps)
library(mapdata)
map("worldHires","US”, xlim=c(-126,-122), ylim=c(36,50), col="gray90”, fill=TRUE)
map("worldHires","US”)
map("worldHires","US”)
map("worldHires","US”)
)
map("worldHires","US")
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE)
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i")
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
,add=TRUE
)
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", add=TRUE)
library(maps)
library(mapdata)
col_seq <- seq(-10,10,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
x <- rep$pred_c_ef[,,i]/mean(rep$pred_c_ef[,,1])
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", type="n")
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
,add=TRUE
)
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", add=TRUE)
}
library(maps)
library(mapdata)
col_seq <- seq(-4,6,0.1)
par(mfrow=c(5,5),mai=c(0.3,0.3,0.2,0.1))
for(i in 1:22){
x <- rep$pred_c_ef[,,i]
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", type="n")
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
,add=TRUE
)
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", add=TRUE)
}
library(mapdata)
col_seq <- seq(-5,6,0.1)
par(mfrow=c(5,5),mai=c(0.0,0.0,0.0,0.0))
for(i in 1:22){
x <- rep$pred_c_ef[,,i]
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", type="n")
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
,add=TRUE
)
map("worldHires","US", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", add=TRUE)
}
?map
for(i in 1:22){
x <- rep$pred_c_ef[,,i]
map("usa", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", type="n")
image(loi_lu$lo, lati_lu$lat, x,main=i+1997
,col=rainbow(length(col_seq)-1)
,breaks=col_seq
,add=TRUE
)
map("usa", xlim=c(-126,-122), ylim=c(36,50), col=grey(0.9), fill=TRUE, yaxs="i", xaxs="i", add=TRUE)
}
install.packages("mapproject")
load(url("http://github.com/mgimond/Spatial/raw/master/Data/Sample1.RData"))
install.packages("raster")
install.packages("raster")
install.packages("raster")
load(url("http://github.com/mgimond/Spatial/raw/master/Data/Sample1.RData"))
rm(list=c("inter.sf", "p.sf", "rail.sf"))
library(sf)
st_crs(s.sf)
library(raster)
crs(elev.r)
require(ggplot2); theme_set(theme_bw())
wrld_simpl_df = fortify(wrld_simpl)
library(maptools)
install.packages("maptools")
install.packages("maptools")
version
install.packages("installr")
library(installr)
survey <- read.csv("comb_catches.txt", sep="\t", header = TRUE)
stations <- unique(survey$Station_Code)
df = data.frame(y = log(survey$CPUE),
locx = survey$Lon,
locy = survey$Lat)
# spatial.scaling = 1
# df$locx = (df$locx - min(df$locx))/spatial.scaling
# df$locy = (df$locy - min(df$locy))/spatial.scaling
df$dist = survey$Distance_Offshore_nmi - mean(survey$Distance_Offshore_nmi)
df$y = df$y-min(df$y)
max.edge = 0.99
mesh = inla.mesh.2d(loc=cbind(df$locx, df$locy),
max.n = 200, cutoff = 0.1)
library(INLA); library(sp); library(fields)
# library(geoR)
library(viridisLite)
library(TMB)
library(ggthemes)
library(maps)
require(sp)
require(maptools)
require(ggplot2)
survey <- read.csv("comb_catches.txt", sep="\t", header = TRUE)
stations <- unique(survey$Station_Code)
df = data.frame(y = log(survey$CPUE),
locx = survey$Lon,
locy = survey$Lat)
# spatial.scaling = 1
# df$locx = (df$locx - min(df$locx))/spatial.scaling
# df$locy = (df$locy - min(df$locy))/spatial.scaling
df$dist = survey$Distance_Offshore_nmi - mean(survey$Distance_Offshore_nmi)
df$y = df$y-min(df$y)
max.edge = 0.99
mesh = inla.mesh.2d(loc=cbind(df$locx, df$locy),
max.n = 200, cutoff = 0.1)
plot(mesh)
dyn.load("squid")
n_i <- nrow(survey)
n_x <- mesh$n
n_t <- length(unique(survey$Year))
n_p <- 1 #number of covariates
x_s <- mesh$idx$loc - 1
c_i <- survey$CPUE
s_i <- data.frame(Station=survey$Station)
si_lu <- data.frame(s_i=1:length(unique(survey$Station)),
Station=unique(survey$Station))
s_i <- merge(s_i,si_lu)$s_i-1
t_i <- survey[,'Year']-min(survey[,'Year'])
X_xp <- as.matrix(rep(1,n_x),n_x,1)
spde = inla.spde2.matern(mesh)
Data = list( n_i=n_i,
n_x=n_x,
n_t=n_t,
n_p=ncol(X_xp),
x_s=x_s,
c_i=c_i,
s_i=s_i,
t_i=t_i,
X_xp=X_xp,
G0=spde$param.inla$M0,
G1=spde$param.inla$M1,
G2=spde$param.inla$M2)
Parameters = list(fp= 0,
alpha=rep(0.0),
fsd = 5.0,
phi=0.0,
log_tau_E=1.0,
log_tau_O=1.0,
log_kappa=0.0,
rho=0.5,
fs_sd = 0,
eps_s = unique(Data$s_i)*0,
eps_p = unique(Data$s_i)*0,
fp_sd = 0,
Epsilon_input=matrix(0,nrow=mesh$n,ncol=Data$n_t),
Omega_input=rep(0,mesh$n))
Random = c("Epsilon_input","Omega_input", "eps_s","eps_p")
# library(TMBhelper)
myMap <- list()
UseMap <- FALSE
if(UseMap){
myMap <- list(Epsilon_input=as.factor(matrix(NA,nrow=mesh$n,ncol=Data$n_t))
,Omega_input=as.factor(rep(NA,mesh$n))
,phi = as.factor(NA)
,log_tau_E = as.factor(NA)
,log_tau_O = as.factor(NA)
,log_kappa = as.factor(NA)
,rho = as.factor(NA)
)
}
UseP_Map <- TRUE
if(UseP_Map){
myMap <- list(eps_p=as.factor(rep(NA,length(Parameters$eps_p)))
,eps_s=as.factor(rep(NA,length(Parameters$eps_s)))
,fp_sd = as.factor(NA)
,fs_sd = as.factor(NA)
)
}
# Make object
Obj = MakeADFun(data=Data,
parameters=Parameters,
random=Random,
map = myMap,
hessian=FALSE,
DLL="squid")
out <- nlminb(Obj$par,Obj$fn,Obj$gr)
out
# SD <- sdreport(Obj)
#
#This is the output of the model
rep <- Obj$report()
plot(rep$Epsilon_xt)
rep$Epsilon_xt
hist(rep$Epsilon_xt)
library(VAST)
install.packages("VAST")
library(VAST)
devtools::install_github("james-thorson/VAST")
devtools::install_github("james-thorson/VAST")
devtools::install_github("james-thorson/VAST")
#Start by bringing in the flat data.
raw <- read.csv("comb_catches.csv")
head(raw)
library(VAST)
library(TMB)
library(devtools)
install_github("james-thorson/VAST", INSTALL_opts="--no-staged-install")
install.packages(:glue)
install.packages("glue")
install.packages("glue")
install.packages("backports")
install.packages("ellipsis")
devtools::install_github("james-thorson/VAST")
head(raw)
version
library(devtools)
install.github("james-thorson/FishStatsUtils", INSTALL_opts="--no-staged-install")
install_github("james-thorson/FishStatsUtils", INSTALL_opts="--no-staged-install")
install_github("james-thorson/VAST", INSTALL_opts="--no-staged-install")
library(VAST)
# Load packages
library(TMB)
library(VAST)
# load data set
# see `?load_example` for list of stocks with example data
# that are installed automatically with `FishStatsUtils`.
example = load_example( data_set="EBS_pollock" )
# Make settings (turning off bias.correct to save time for example)
settings = make_settings( n_x=100,
Region=example$Region,
purpose="index",
strata.limits=example$strata.limits,
bias.correct=FALSE )
# Run model
fit = fit_model( settings=settings,
Lat_i=example$sampling_data[,'Lat'],
Lon_i=example$sampling_data[,'Lon'],
t_i=example$sampling_data[,'Year'],
c_i=rep(0,nrow(example$sampling_data)),
b_i=example$sampling_data[,'Catch_KG'],
a_i=example$sampling_data[,'AreaSwept_km2'],
v_i=example$sampling_data[,'Vessel'] )
# Plot results
plot( fit )
