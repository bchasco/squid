plot_set=1)
#Figures 3, 4, 5
plot_results(fit,
working_dir = paste0(getwd(),"/VAST_plots/"),
strata_names = order(strata.limits$STRATA),
# years_to_plot = years_to_plot,
plot_set=2)
#Figures 4
plot_results(fit,
working_dir = paste0(getwd(),"/VAST_plots/"),
# years_to_plot = years_to_plot,
strata_names = strata.limits$STRATA, #You have to sort these alphabetically to get the plots to make sense
plot_set=7)
plot_quantile_diagnostic()
?plot_quantile_diagnostic
plot_quantile_diagnostic
pnorm(dnorm(seq(-3,3,0.1),0,1))
search()
ls(8)
Crossvalidate_Fn
ls(7)
Version("FishStatsUtils")
packageVersion("FishStatsUtils")
Crossvalidate_Fn
ParHat <- fit$ParHat
# Generate partitions in data
n_fold = 10
Partition_i = sample( 1:n_fold, size=nrow(raw), replace=TRUE )
prednll_f = rep(NA, n_fold )
prednll_f <- rep(NA, n_fold )
# Loop through partitions, refitting each time with a different PredTF_i
for( fI in 1:n_fold ){
PredTF_i = ifelse( Partition_i==fI, TRUE, FALSE )
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
# Save fit to out-of-bag data
prednll_f[fI] = fit_new$Report$pred_jnll
}
prednll_f
sum(prednll_f)
best_mod_kfold <- prednll_f
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
next_mod_kfold <- prednll_f
next_mod_kfold
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
PredTF_i
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
fit <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
#,Q_ik = as.matrix(Q_ik)
# ,formula=formula
# ,covariate_data=covariate_data
)
best_mod_kfold
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
fit$ParHat
fit_new$Report$pred_jnll
rm(fit_new)
PredTF_i = ifelse( Partition_i==fI, TRUE, FALSE )
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
fit_new
PredTF_i = ifelse( Partition_i==2, TRUE, FALSE )
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
FishStatsUtils:::Crossvalidate_Fn(getwd(), ParHat, fit$data_list)
?Crossvalidate_Fn
FishStatsUtils:::Crossvalidate_Fn(paste0(getwd(),"/"), ParHat, fit$data_list)
ParHat
library(VAST)
library(TMB)
library(dplyr)
#Data
# raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
raw <- read.csv("Update_Comb_Catch_wTrawlDist.csv")
#Adjust by wainright paper
raw$catch[raw$Gear=="264NRT+MMED_Down"] <- raw$catch[raw$Gear=="264NRT+MMED_Down"]/0.48
raw$catch[raw$Gear=="264NRT+MMED_Up"] <- raw$catch[raw$Gear=="264NRT+MMED_Up"]/0.88
#Get rid of any blanks
raw <- raw[!apply(raw,1,function(x)return(sum(is.na(x)))),]
#Decisions for VAST analysis. This follows the structure of Thorson (2019)
#1)A multi region input looks like this
strata.limits <- data.frame(
'STRATA' = c("Coastwide","CA","OR","WA"),
'north_border' = c(49.0, 42.0, 46.0, 49.0),
'south_border' = c(37.0, 37.0, 42.0, 46.0)
)
#2) Single size class for now
c_iz <- rep(0,dim(raw)[1]) #This needs to be numeric starting at 0
# c_iz <- as.integer(as.factor(raw$size))-1 #This needs to be numeric starting at 0
#3) CPUE for now must change it to numbers
# b_i <- raw$Total_CPUE
b_i <- raw$catch
#4) Spatial and Spatio-temporal for both encounter and positive catches, see #6)
FieldConfig = c("Omega1" = 0
,"Epsilon1" = 0
,"Omega2" = 0
,"Epsilon2" = 0)
#5) Choosing the spatial
Mesh.Method <- "samples" #mesh
grid_size_km <- 100
n_x <- 175 #number of knots.  This is really important. To few and the model won't converge, too many and it will take forever.
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
Aniso <- TRUE #isotropic
#6) Choosing the number of spatial and temporal factors
#We have a single factor to the encounter probabilites (Omega1 and Epsilon1)
#We have a single factor to the positive encounters (Omega2 and Epsilon2)
#1 is the encounter, 2 is the positive catches
#Omega is spatial, Epsilon is spatio-temporal
FieldConfig <-c(Omega1 = 1 #Spatial corr. encounter probability
,Epsilon1 = 1 #Spatial corr for positive catch probability.
,Omega2 = 1 #Spatiotemporal corr. for encounter probability
,Epsilon2 = 1)#Spatiotemporal corr. for positive catch probability
#7) Temporal correlation
RhoConfig= c("Beta1" = 0 #Temporal corr. encounter covariate intercepts
,"Beta2" = 0 #Temporal corr. for positive catch covariate intercepts
,"Epsilon1"= 0 #Temporal corr. for encounter probability intercepts
,"Epsilon2" = 0) #Temporal corr. for positive catch intercepts
#8) Density dependent covariates
#None for now
# install.packages("splines")
library(splines)
formula = ~ bs( log(Station_Depth_m), knots=3, intercept=FALSE)
# covariate_data <- data.frame(Lat=raw$Lat,Lon=raw$Lat,Year=raw$Year,Station_Depth_m=raw$Station_Depth_m/100)
covariate_data <- data.frame(Lat=raw$Lat,Lon=raw$Lat,Year=NA,Station_Depth_m=raw$Station_Depth_m/100)
covariate_data$Year <- NA
#9) Catchability associated with vessel
Q_ik <- raw[,c('X3m_Temp','X3m_Salinity','X3m_Chl')] #rep(1,nrow(raw))
for(i in 1:ncol(Q_ik)){
Q_ik[is.na(Q_ik[,i]),i] <- mean(na.omit(Q_ik[,i]))
}
#10) Area offsets
a_i <- raw$TrawlDist_km*0.085 #distance times net width
#11) Over dispersion vessel effects
#This treats the vessel and MMED effects as fixed
OverdispersionConfig = c("Eta1"=0, "Eta2"=0)
#12)The observation model is
ObsModel = c(2,0) # Distribution for data, and link-function for linear predictors
#13) Options for derived quantities
Options = c(SD_site_density = 0
,SD_site_logdensity = 0
,Calculate_Range = 1 #Center of gravity
,Calculate_evenness = 0
,Calculate_effective_area = 1
,Calculate_Cov_SE = 0
,Calculate_Synchrony = 0
,Calculate_Coherence = 0)
#14)
#15)
############Putting is all together
AICTable <- data.frame(Model=NA,AIC=NA)
ii <- 1
k <- 1
# for(k in 0:1){
#   for(i in 1:4){
#     myComb <- combn(1:4,i)
#     for(j in 1:ncol(myComb)){
# FieldConfig[1:4] <- rep(1,4)
# FieldConfig[myComb[,j]] <- 0
# if(sum(FieldConfig[1:2]>0)){
settings <- make_settings(
n_x = n_x
,Region = "california_current"
,purpose = "index2"
,strata.limits = strata.limits
,FieldConfig = FieldConfig
,RhoConfig = RhoConfig
,OverdispersionConfig = OverdispersionConfig
,ObsModel = ObsModel
,knot_method = "samples"
,bias.correct = FALSE
,Options = Options
)
if(k==1){
}
fit <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
#,Q_ik = as.matrix(Q_ik)
# ,formula=formula
# ,covariate_data=covariate_data
)
AICTable[ii,] <- c(paste(c(k,FieldConfig),collapse=""),
fit$parameter_estimates$AIC[1])
ii <- ii + 1
#     }
#   }
# }
#12)The observation model is
ObsModel = c(4,0) # Distribution for data, and link-function for linear predictors
#13) Options for derived quantities
Options = c(SD_site_density = 0
,SD_site_logdensity = 0
,Calculate_Range = 1 #Center of gravity
,Calculate_evenness = 0
,Calculate_effective_area = 1
,Calculate_Cov_SE = 0
,Calculate_Synchrony = 0
,Calculate_Coherence = 0)
AICTable <- data.frame(Model=NA,AIC=NA)
ii <- 1
k <- 1
# for(k in 0:1){
#   for(i in 1:4){
#     myComb <- combn(1:4,i)
#     for(j in 1:ncol(myComb)){
# FieldConfig[1:4] <- rep(1,4)
# FieldConfig[myComb[,j]] <- 0
# if(sum(FieldConfig[1:2]>0)){
settings <- make_settings(
n_x = n_x
,Region = "california_current"
,purpose = "index2"
,strata.limits = strata.limits
,FieldConfig = FieldConfig
,RhoConfig = RhoConfig
,OverdispersionConfig = OverdispersionConfig
,ObsModel = ObsModel
,knot_method = "samples"
,bias.correct = FALSE
,Options = Options
)
fit <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
#,Q_ik = as.matrix(Q_ik)
# ,formula=formula
# ,covariate_data=covariate_data
)
############Putting is all together
rm(fit)
a_i
b_i
hits(b_i)
hist(b_i)
hist(b_i, breaks=200)
sum(b_i==0)
sum(b_i>0)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
names(raw)
#Data
raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
#Adjust by wainright paper
raw$catch[raw$Gear=="264NRT+MMED_Down"] <- raw$catch[raw$Gear=="264NRT+MMED_Down"]/0.48
raw$catch[raw$Gear=="264NRT+MMED_Up"] <- raw$catch[raw$Gear=="264NRT+MMED_Up"]/0.88
#Get rid of any blanks
raw <- raw[!apply(raw,1,function(x)return(sum(is.na(x)))),]
#Decisions for VAST analysis. This follows the structure of Thorson (2019)
#1)A multi region input looks like this
strata.limits <- data.frame(
'STRATA' = c("Coastwide","CA","OR","WA"),
'north_border' = c(49.0, 42.0, 46.0, 49.0),
'south_border' = c(37.0, 37.0, 42.0, 46.0)
)
#2) Single size class for now
c_iz <- rep(0,dim(raw)[1]) #This needs to be numeric starting at 0
#3) CPUE for now must change it to numbers
b_i <- raw$Total_CPUE
#4) Spatial and Spatio-temporal for both encounter and positive catches, see #6)
FieldConfig = c("Omega1" = 0
,"Epsilon1" = 0
,"Omega2" = 0
,"Epsilon2" = 0)
b_i
#4) Spatial and Spatio-temporal for both encounter and positive catches, see #6)
FieldConfig = c("Omega1" = 0
,"Epsilon1" = 0
,"Omega2" = 0
,"Epsilon2" = 0)
#5) Choosing the spatial
Mesh.Method <- "samples" #mesh
grid_size_km <- 100
n_x <- 175 #number of knots.  This is really important. To few and the model won't converge, too many and it will take forever.
Kmeans_Config = list( "randomseed"=1, "nstart"=100, "iter.max"=1e3 )
Aniso <- TRUE #isotropic
#6) Choosing the number of spatial and temporal factors
#We have a single factor to the encounter probabilites (Omega1 and Epsilon1)
#We have a single factor to the positive encounters (Omega2 and Epsilon2)
#1 is the encounter, 2 is the positive catches
#Omega is spatial, Epsilon is spatio-temporal
FieldConfig <-c(Omega1 = 1 #Spatial corr. encounter probability
,Epsilon1 = 1 #Spatial corr for positive catch probability.
,Omega2 = 1 #Spatiotemporal corr. for encounter probability
,Epsilon2 = 1)#Spatiotemporal corr. for positive catch probability
#7) Temporal correlation
RhoConfig= c("Beta1" = 0 #Temporal corr. encounter covariate intercepts
,"Beta2" = 0 #Temporal corr. for positive catch covariate intercepts
,"Epsilon1"= 0 #Temporal corr. for encounter probability intercepts
,"Epsilon2" = 0) #Temporal corr. for positive catch intercepts
#8) Density dependent covariates
#None for now
# install.packages("splines")
library(splines)
formula = ~ bs( log(Station_Depth_m), knots=3, intercept=FALSE)
# covariate_data <- data.frame(Lat=raw$Lat,Lon=raw$Lat,Year=raw$Year,Station_Depth_m=raw$Station_Depth_m/100)
covariate_data <- data.frame(Lat=raw$Lat,Lon=raw$Lat,Year=NA,Station_Depth_m=raw$Station_Depth_m/100)
covariate_data$Year <- NA
#9) Catchability associated with vessel
Q_ik <- raw[,c('X3m_Temp','X3m_Salinity','X3m_Chl')] #rep(1,nrow(raw))
for(i in 1:ncol(Q_ik)){
Q_ik[is.na(Q_ik[,i]),i] <- mean(na.omit(Q_ik[,i]))
}
#10) Area offsets
a_i <- raw$TrawlDist_km*0.085 #distance times net width
#11) Over dispersion vessel effects
#This treats the vessel and MMED effects as fixed
OverdispersionConfig = c("Eta1"=0, "Eta2"=0)
#12)The observation model is
ObsModel = c(4,0) # Distribution for data, and link-function for linear predictors
#13) Options for derived quantities
Options = c(SD_site_density = 0
,SD_site_logdensity = 0
,Calculate_Range = 1 #Center of gravity
,Calculate_evenness = 0
,Calculate_effective_area = 1
,Calculate_Cov_SE = 0
,Calculate_Synchrony = 0
,Calculate_Coherence = 0)
AICTable <- data.frame(Model=NA,AIC=NA)
ii <- 1
fit
k <- 1
# for(k in 0:1){
#   for(i in 1:4){
#     myComb <- combn(1:4,i)
#     for(j in 1:ncol(myComb)){
# FieldConfig[1:4] <- rep(1,4)
# FieldConfig[myComb[,j]] <- 0
# if(sum(FieldConfig[1:2]>0)){
settings <- make_settings(
n_x = n_x
,Region = "california_current"
,purpose = "index2"
,strata.limits = strata.limits
,FieldConfig = FieldConfig
,RhoConfig = RhoConfig
,OverdispersionConfig = OverdispersionConfig
,ObsModel = ObsModel
,knot_method = "samples"
,bias.correct = FALSE
,Options = Options
)
if(k==1){
}
fit <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
#,Q_ik = as.matrix(Q_ik)
# ,formula=formula
# ,covariate_data=covariate_data
)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/PlotsForPaper.r', echo=TRUE)
plot_results(fit,
working_dir = paste0(getwd(),"/VAST_plots/"),
# years_to_plot = years_to_plot,
plot_set=1)
c_iz
length(c_iz)
length(b_i)
dim(raw)
length(a_i)
length(v_i)
n_i
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/PlotsForPaper.r', echo=TRUE)
# Loop through partitions, refitting each time with a different PredTF_i
for( fI in 1:n_fold ){
rm(fit_new)
PredTF_i = ifelse( Partition_i==2, TRUE, FALSE )
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
# Save fit to out-of-bag data
prednll_f[fI] = fit_new$Report$pred_jnll
}
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,nrow(raw))
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
PredTF_i = ifelse( Partition_i==fI, TRUE, FALSE )
fit_new <- fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,n_i)
,"PredTF_i"=PredTF_i
,"Parameters"=ParHat
,"getsd"=FALSE
)
source('C:/NOAA/PROJECTS/squid/ModelValidation.r', echo=TRUE)
prednll_f
best_prednll_f <- prednll_f
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
AICTable
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
AICTable
paste(c(k,FieldConfig),collapse="")
?tryCatch
fit <- tryCatch(fit_model(settings = settings
,Lat_i = raw$Lat
,Lon_i = raw$Lon
,t_i = raw$Year
,c_i = c_iz
,b_i =  b_i #Number of squid captured.
,a_i = a_i
,v_i = rep(0,nrow(raw))
,silent = TRUE
#,Q_ik = as.matrix(Q_ik)
# ,formula=formula
# ,covariate_data=covariate_data
), warning = function() {
return(NA)
}, error = function() {
return(NA)
})
paste(c(k,FieldConfig),collapse=""
paste(c(k,FieldConfig),collapse="")
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
AICTable
source('C:/NOAA/PROJECTS/squid/SquidAnalysis_VAST.r', echo=TRUE)
AICTable
