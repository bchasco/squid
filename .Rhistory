}
for(i in c(1)){
plot_results(All_fit,plot_set = i, years_to_plot = c(1,22)
)
}
source('C:/NOAA/PROJECTS/squid/MLE_Model.r', echo=TRUE)
source('C:/NOAA/PROJECTS/COAST_WIDE/buildModel.r', echo=TRUE)
load("AllMLE.rData")
All_fit$parameter_estimates
plogis(-0.78508)/plogis(-0.78508+0.35*seq(-2,2,0.1))
plot(plogis(-0.78508)/plogis(-0.78508+0.35*seq(-2,2,0.1)))
exists(All_fit)
get0(All_fit)
exists("All_fit")
!exists("All_fit")
names(All_fit$parameter_estimates)
names(All_fit$parameter_estimates$par)
All_fit$parameter_estimates$par["Beta_mean1_c"]
parNames <- names(All_fit$parameter_estimates$par)
p_mu <- All_fit$parameter_estimates$par["Beta_mean1_c"]
p_lam <- All_fit$parameter_estimates$par[grep("lambda1", parNames)]
p_lam
apply(plam,1,function(x){return(plogis(p_mu)/plogis(p_mu+x*seq(-2,2,0.1)))})
source('~/.active-rstudio-document', echo=TRUE)
p_lam
source('~/.active-rstudio-document', echo=TRUE)
plogis(p_mu)
plogis(p_mu+x*seq(-2,2,0.1))
plogis(p_mu+x*seq(-2,2,0.1))
plogis(p_mu+p_lam[1]*seq(-2,2,0.1))
p1 <- plogis(p_mu)/plogis(p_mu+p_lam[1]*seq(-2,2,0.1))
p1 <- plogis(p_mu)/plogis(p_mu+p_lam[2]*seq(-2,2,0.1))
p_lam <- All_fit$parameter_estimates$par[grep("lambda1", parNames)]
r_lam <- All_fit$parameter_estimates$par[grep("lambda2", parNames)]
source('~/.active-rstudio-document', echo=TRUE)
matplot(cbind(p1,r1))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
matplot(cbind(p1,r1), type="l")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
matplot(seq(-2,2,0.1),
cbind(p1,r1), type="l", las=1)
matplot(seq(-2,2,0.1),
cbind(p2,r2), type="l", las=1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
raw
!exists("raw")
raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
file <- paste0(subDat,"MLE.Rdata")
raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
#Adjust by wainright paper for JSOES
raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"]/0.48
raw$catch[raw$Gear=="264NRT+MMED_Up" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Up" & raw$Extension=="No"]/0.88
#Adjustments for SWFSC - REad Cheryl's email from 9/15/2020
raw$catch[raw$Gear=="264NRT+MMED modified" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED modified" & raw$Extension=="No"]/0.48
raw$catch[raw$Gear=="264NRT+MMED" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED" & raw$Extension=="No"]/0.88
#Get rid of any blanks
raw <- raw[!apply(raw,1,function(x)return(sum(is.na(x)))),]
#9) Catchability associated with surveys
Q_ik <- raw[,c('Top20m_Temp','Top20m_Salinity')] #rep(1,nrow(raw))
for(i in 1:ncol(Q_ik)){
Q_ik[is.na(Q_ik[,i]),i] <- mean(na.omit(Q_ik[,i]))
Q_ik[,i] <- (Q_ik[,i]-mean(Q_ik[,i]))/sd(Q_ik[,i])
}
if(!exists("raw")){
raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
#Adjust by wainright paper for JSOES
raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"]/0.48
raw$catch[raw$Gear=="264NRT+MMED_Up" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Up" & raw$Extension=="No"]/0.88
#Adjustments for SWFSC - REad Cheryl's email from 9/15/2020
raw$catch[raw$Gear=="264NRT+MMED modified" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED modified" & raw$Extension=="No"]/0.48
raw$catch[raw$Gear=="264NRT+MMED" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED" & raw$Extension=="No"]/0.88
#Get rid of any blanks
raw <- raw[!apply(raw,1,function(x)return(sum(is.na(x)))),]
#9) Catchability associated with surveys
Q_ik <- raw[,c('Top20m_Temp','Top20m_Salinity')] #rep(1,nrow(raw))
for(i in 1:ncol(Q_ik)){
Q_ik[is.na(Q_ik[,i]),i] <- mean(na.omit(Q_ik[,i]))
Q_ik[,i] <- (Q_ik[,i]-mean(Q_ik[,i]))/sd(Q_ik[,i])
}
}
Q_ik
head(Q_ik)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
#9) Catchability associated with surveys
Q_ik <- raw[,c('Top20m_Temp','Top20m_Salinity')] #rep(1,nrow(raw))
matplot(seq(-2,2,0.1)*sd(na.omit(Q_ik[,1]))+mean(na.omit(Q_ik[,1])),
cbind(p1,r1), type="l", las=1,
xlab="Change in temperature",
ylab="Percent change in density (#/km2)")
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
p_lam[1]
plogis(p_mu+p_lam[1]*seq(-2,2,0.1))
plogis(p_mu)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_presentation_marginalCovariateEffect.r', echo=TRUE)
# x <- x1[x1$rel_site%in%names(table(x1$rel_site)[table(x1$rel_site)<10000 & table(x1$rel_site)>2000]),]
# x <- x1[x1$rel_site%in%names(table(x1$rel_site)[table(x1$rel_site)>2000]),]
# x <- x1[x1$rel_site%in%c("LGRRBR","LGRRRR"),]
x <- x1[x1$length>=75 & x1$length<=125,]
source('C:/NOAA/PROJECTS/bond_survival/lenWt_v3.r', echo=TRUE)
#Data
raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
file <- paste0(subDat,"MLE.Rdata")
#Adjust by wainright paper for JSOES
raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"]/0.48
mySurveys <- c("All")
subDat <- mySurveys
#Data
raw <- read.csv("Update_Comb_Catch_wTrawlDist_flat.csv")
file <- paste0(subDat,"MLE.Rdata")
#Adjust by wainright paper for JSOES
raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Down" & raw$Extension=="No"]/0.48
raw$catch[raw$Gear=="264NRT+MMED_Up" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED_Up" & raw$Extension=="No"]/0.88
#Adjustments for SWFSC - REad Cheryl's email from 9/15/2020
raw$catch[raw$Gear=="264NRT+MMED modified" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED modified" & raw$Extension=="No"]/0.48
raw$catch[raw$Gear=="264NRT+MMED" & raw$Extension=="No"] <- raw$catch[raw$Gear=="264NRT+MMED" & raw$Extension=="No"]/0.88
#Get rid of any blanks
raw <- raw[!apply(raw,1,function(x)return(sum(is.na(x)))),]
table(taw)
head(raw)
dim(raw)
raw$pos <- 0
raw$pos[raw$catch>1] <- 1
head(raw)
table(raw$Year,raw$pos)
table(raw$Year,raw$Survey, raw$pos)
table(raw$Year,raw$pos, raw$Survey)
load("AllMLE.Rdata")
fit <- All_fit
myval <- fit$parameter_estimates$SD$value
mysd <- fit$parameter_estimates$SD$sd
myval
mysd <- fit$parameter_estimates$SD$sd
ef <- myval[names(myval)=="log_effective_area_cyl"]
ef
names(ef)
names(myval)
ef <- myval[names(myval)=="log_effective_area_ctl"]
ef_sd <- mysd[names(myval)=="log_effective_area_ctl"]
ef
ef_sd
par(mfrow=c(3,1), mai=c(0.8,0.9,0.1,0.9))
plot(1998:2019,
exp(ef[1:22]),
ylab="Effective area occupied (km^2)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=c(min(exp(ef[1:22]-0.67*ef_sd[1:22])),max(exp(ef[1:22]+0.67*ef_sd[1:22])))
)
text(2018,max(exp(ef[1:22]+0.67*ef_sd[1:22]))*0.9,"(a)")
for(i in 1998:2019){
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points(1998:2019,
exp(ef[1:22]),
pch=16,
cex=2,
col="grey")
idx <- myval[names(myval)=="ln_Index_cyl"]
idx_sd <- mysd[names(myval)=="ln_Index_cyl"]
plot(1998:2019,
exp(idx[1:22])/1000,
ylab="Abundance index (1000)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=exp(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22])))/1000
)
idx <- myval[names(myval)=="ln_Index_ctl"]
idx_sd <- mysd[names(myval)=="ln_Index_ctl"]
plot(1998:2019,
exp(idx[1:22])/1000,
ylab="Abundance index (1000)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=exp(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22])))/1000
)
text(2018,max(exp(idx[1:22]+0.67*idx_sd[1:22]))/1000*0.9,"(b)")
for(i in 1998:2019){
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]+0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]-0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
}
points(1998:2019,
exp(idx[1:22])/1000,
pch=16,
cex=2,
col="grey")
plot((idx[1:22]),
(ef[1:22]),
xlab="log(Abundance index)",
ylab="log(EAO (km^2))",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
xlim=(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22]))),
ylim=c(min((ef[1:22]-0.67*ef_sd[1:22])),max((ef[1:22]+0.67*ef_sd[1:22])))
)
text(max(idx[1:22]+0.67*idx_sd[1:22])*0.99,max((ef[1:22]+0.67*ef_sd[1:22]))*0.99,"(c)")
#Error idx
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]+0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]-0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
}
#Error ef
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points((idx[1:22]),
(ef[1:22]),
pch=16,
cex=2,
col="grey")
dev.off()
tiff("plot_density_dependence.tiff", width=480, height=720, res = 600)
load("AllMLE.Rdata")
fit <- All_fit
myval <- fit$parameter_estimates$SD$value
mysd <- fit$parameter_estimates$SD$sd
ef <- myval[names(myval)=="log_effective_area_ctl"]
ef_sd <- mysd[names(myval)=="log_effective_area_ctl"]
par(mfrow=c(3,1), mai=c(0.8,0.9,0.1,0.9))
plot(1998:2019,
exp(ef[1:22]),
ylab="Effective area occupied (km^2)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=c(min(exp(ef[1:22]-0.67*ef_sd[1:22])),max(exp(ef[1:22]+0.67*ef_sd[1:22])))
)
text(2018,max(exp(ef[1:22]+0.67*ef_sd[1:22]))*0.9,"(a)")
for(i in 1998:2019){
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points(1998:2019,
exp(ef[1:22]),
pch=16,
cex=2,
col="grey")
idx <- myval[names(myval)=="ln_Index_ctl"]
idx_sd <- mysd[names(myval)=="ln_Index_ctl"]
plot(1998:2019,
exp(idx[1:22])/1000,
ylab="Abundance index (1000)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=exp(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22])))/1000
)
text(2018,max(exp(idx[1:22]+0.67*idx_sd[1:22]))/1000*0.9,"(b)")
for(i in 1998:2019){
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]+0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]-0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
}
points(1998:2019,
exp(idx[1:22])/1000,
pch=16,
cex=2,
col="grey")
plot((idx[1:22]),
(ef[1:22]),
xlab="log(Abundance index)",
ylab="log(EAO (km^2))",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
xlim=(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22]))),
ylim=c(min((ef[1:22]-0.67*ef_sd[1:22])),max((ef[1:22]+0.67*ef_sd[1:22])))
)
text(max(idx[1:22]+0.67*idx_sd[1:22])*0.99,max((ef[1:22]+0.67*ef_sd[1:22]))*0.99,"(c)")
#Error idx
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]+0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]-0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
}
#Error ef
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points((idx[1:22]),
(ef[1:22]),
pch=16,
cex=2,
col="grey")
dev.off()
summary(lm(ef~idx
))
save(ef,ef_sd,idx,idx_sd, file="dens.rData") #Save density dependent data for estimating slope
?tiff
tiff("plot_density_dependence.tiff", width=480, height=720, res = 200)
load("AllMLE.Rdata")
fit <- All_fit
myval <- fit$parameter_estimates$SD$value
mysd <- fit$parameter_estimates$SD$sd
ef <- myval[names(myval)=="log_effective_area_ctl"]
ef_sd <- mysd[names(myval)=="log_effective_area_ctl"]
par(mfrow=c(3,1), mai=c(0.8,0.9,0.1,0.9))
plot(1998:2019,
exp(ef[1:22]),
ylab="Effective area occupied (km^2)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=c(min(exp(ef[1:22]-0.67*ef_sd[1:22])),max(exp(ef[1:22]+0.67*ef_sd[1:22])))
)
text(2018,max(exp(ef[1:22]+0.67*ef_sd[1:22]))*0.9,"(a)")
for(i in 1998:2019){
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points(1998:2019,
exp(ef[1:22]),
pch=16,
cex=2,
col="grey")
idx <- myval[names(myval)=="ln_Index_ctl"]
idx_sd <- mysd[names(myval)=="ln_Index_ctl"]
plot(1998:2019,
exp(idx[1:22])/1000,
ylab="Abundance index (1000)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=exp(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22])))/1000
)
text(2018,max(exp(idx[1:22]+0.67*idx_sd[1:22]))/1000*0.9,"(b)")
for(i in 1998:2019){
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]+0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]-0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
}
points(1998:2019,
exp(idx[1:22])/1000,
pch=16,
cex=2,
col="grey")
plot((idx[1:22]),
(ef[1:22]),
xlab="log(Abundance index)",
ylab="log(EAO (km^2))",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
xlim=(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22]))),
ylim=c(min((ef[1:22]-0.67*ef_sd[1:22])),max((ef[1:22]+0.67*ef_sd[1:22])))
)
text(max(idx[1:22]+0.67*idx_sd[1:22])*0.99,max((ef[1:22]+0.67*ef_sd[1:22]))*0.99,"(c)")
#Error idx
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]+0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]-0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
}
#Error ef
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points((idx[1:22]),
(ef[1:22]),
pch=16,
cex=2,
col="grey")
dev.off()
summary(lm(ef~idx
))
save(ef,ef_sd,idx,idx_sd, file="dens.rData") #Save density dependent data for estimating slope
tiff("plot_density_dependence.tiff",res = 200)
load("AllMLE.Rdata")
fit <- All_fit
myval <- fit$parameter_estimates$SD$value
mysd <- fit$parameter_estimates$SD$sd
ef <- myval[names(myval)=="log_effective_area_ctl"]
ef_sd <- mysd[names(myval)=="log_effective_area_ctl"]
par(mfrow=c(3,1), mai=c(0.8,0.9,0.1,0.9))
plot(1998:2019,
exp(ef[1:22]),
ylab="Effective area occupied (km^2)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=c(min(exp(ef[1:22]-0.67*ef_sd[1:22])),max(exp(ef[1:22]+0.67*ef_sd[1:22])))
)
text(2018,max(exp(ef[1:22]+0.67*ef_sd[1:22]))*0.9,"(a)")
for(i in 1998:2019){
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments(i,exp(ef[i-1997]),i,exp(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points(1998:2019,
exp(ef[1:22]),
pch=16,
cex=2,
col="grey")
idx <- myval[names(myval)=="ln_Index_ctl"]
idx_sd <- mysd[names(myval)=="ln_Index_ctl"]
plot(1998:2019,
exp(idx[1:22])/1000,
ylab="Abundance index (1000)",
xlab="Year",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
ylim=exp(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22])))/1000
)
text(2018,max(exp(idx[1:22]+0.67*idx_sd[1:22]))/1000*0.9,"(b)")
for(i in 1998:2019){
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]+0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
segments(i,exp(idx[i-1997])/1000,i,exp(idx[i-1997]-0.67*idx_sd[i-1997])/1000, lty=2, lwd=0.5)
}
points(1998:2019,
exp(idx[1:22])/1000,
pch=16,
cex=2,
col="grey")
plot((idx[1:22]),
(ef[1:22]),
xlab="log(Abundance index)",
ylab="log(EAO (km^2))",
pch=16,
cex=2,
col="grey",
cex.lab=1.5,
cex.axis=1.5,
xlim=(c(min(idx[1:22]-0.67*idx_sd[1:22]),max(idx[1:22]+0.67*idx_sd[1:22]))),
ylim=c(min((ef[1:22]-0.67*ef_sd[1:22])),max((ef[1:22]+0.67*ef_sd[1:22])))
)
text(max(idx[1:22]+0.67*idx_sd[1:22])*0.99,max((ef[1:22]+0.67*ef_sd[1:22]))*0.99,"(c)")
#Error idx
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]+0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]-0.67*idx_sd[i-1997]),(ef[i-1997]), lty=2, lwd=0.5)
}
#Error ef
for(i in 1998:2019){
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]-0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
segments((idx[i-1997]),(ef[i-1997]),(idx[i-1997]),(ef[i-1997]+0.67*ef_sd[i-1997]), lty=2, lwd=0.5)
}
points((idx[1:22]),
(ef[1:22]),
pch=16,
cex=2,
col="grey")
dev.off()
summary(lm(ef~idx
))
save(ef,ef_sd,idx,idx_sd, file="dens.rData") #Save density dependent data for estimating slope
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/COG_plot_MLE.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/COG_plot_MLE.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/new_COG_plot.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/COG_plot_MLE.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/COG_plot_MLE.r', echo=TRUE)
dev.off()
dev.off()
source('C:/NOAA/PROJECTS/squid/COG_plot_MLE.r', echo=TRUE)
source('C:/NOAA/PROJECTS/squid/plot_densit_dependence.r', echo=TRUE)
